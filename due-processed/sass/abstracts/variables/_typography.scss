$__INTERNAL_USE_ONLY_FONTS__: (
	"IBM Plex Serif Light": "./fonts/IBMPlexSerif-Light.woff2",
	"IBM Plex Serif Medium": "./fonts/IBMPlexSerif-Medium.woff2",
	"Work Sans Light": "./fonts/WorkSans-Light.woff2",
);

$__INTERNAL_USE_ONLY_SERIF_BACKUPS__: georgia, "Times New Roman", times, serif;
$__INTERNAL_USE_ONLY_SANS_BACKUPS__: "Helvetica Neue", helvetica, arial,
	sans-serif;

@each $font-name, $font-src in $__INTERNAL_USE_ONLY_FONTS__ {
	@font-face {
		font-family: "#{$font-name}";
		src: url(#{$font-src}) format("woff");
		font-style: normal;
		font-display: swap;
	}
}

@mixin font-header($size: small, $type: normal) {
	$size-map: (
		small: 2.2rem,
		large: 2.8rem,
	);
	$type-map: (
		normal: "IBM Plex Serif Medium",
	);
	$back-up: $__INTERNAL_USE_ONLY_SERIF_BACKUPS__;

	@if ($size = small) {
		font-size: map-get($size-map, $size);
		font-family: map-get($type-map, $type), $back-up;
	} @else if ($size = large) {
		font-size: map-get($size-map, $size);
		font-family: map-get($type-map, $type), $back-up;
	} @else {
		@error "#{$size} not supported.";
	}
}

@mixin font-body($size: small, $type: normal) {
	$size-map: (
		small: 1.2rem,
		medium: 1.6rem,
		large: 2rem,
	);
	$type-map: (
		normal: "IBM Plex Serif Light",
		heavy: "IBM Plex Serif Medium",
	);
	$back-up: $__INTERNAL_USE_ONLY_SERIF_BACKUPS__;

	@if ($size = small and $type = heavy) {
		font-size: map-get($size-map, $size);
		font-family: map-get($type-map, $type), $back-up;
	} @else if ($size = small and $type = normal) {
		font-size: map-get($size-map, $size);
		font-family: map-get($type-map, $type), $back-up;
	} @else if ($size = medium and $type = heavy) {
		font-size: map-get($size-map, $size);
		font-family: map-get($type-map, $type), $back-up;
	} @else if ($size = medium and $type = normal) {
		font-size: map-get($size-map, $size);
		font-family: map-get($type-map, $type), $back-up;
	} @else if ($size = large and $type = normal) {
		font-size: map-get($size-map, $size);
		font-family: map-get($type-map, $type), $back-up;
	} @else {
		@error "#{$size} and #{$type} combination not supported.";
	}
}

@mixin font-label($size: medium, $type: normal) {
	$size-map: (
		medium: 1.6rem,
	);
	$type-map: (
		normal: "Work Sans Light",
	);
	$back-up: $__INTERNAL_USE_ONLY_SANS_BACKUPS__;
	@if ($size = medium and $type = normal) {
		font-size: map-get($size-map, $size);
		font-family: map-get($type-map, $type), $back-up;
	} @else {
		@error "#{$size} not supported.";
	}
}

$font__code: monaco, consolas, "Andale Mono", "DejaVu Sans Mono", monospace;
$font__pre: "Courier 10 Pitch", courier, monospace;
$font__line-height-body: 1.5;
$font__line-height-pre: 1.6;
